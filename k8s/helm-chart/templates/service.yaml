apiVersion: v1
kind: Service
metadata:
  name: {{ include "arbitragex-supreme.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "arbitragex-supreme.labels" . | nindent 4 }}
  annotations:
    # Service mesh annotations
    service.istio.io/canonical-name: arbitragex-supreme
    service.istio.io/canonical-revision: {{ .Chart.AppVersion }}
    # Monitoring annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.service.metricsPort }}"
    prometheus.io/path: "/metrics"
spec:
  type: {{ .Values.service.type }}
  ports:
    # Main application port
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
    
    # Health check port
    - port: {{ .Values.service.healthPort }}
      targetPort: health
      protocol: TCP
      name: health
    
    # Metrics port for Prometheus
    - port: {{ .Values.service.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    
    # WebSocket port for real-time updates
    - port: {{ .Values.service.wsPort }}
      targetPort: websocket
      protocol: TCP
      name: websocket
    
    # gRPC port for internal services
    - port: {{ .Values.service.grpcPort }}
      targetPort: grpc
      protocol: TCP
      name: grpc

  {{- if eq .Values.service.type "LoadBalancer" }}
  {{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- range .Values.service.loadBalancerSourceRanges }}
    - {{ . }}
    {{- end }}
  {{- end }}
  {{- end }}

  {{- if eq .Values.service.type "NodePort" }}
  {{- if .Values.service.nodePort }}
  nodePort: {{ .Values.service.nodePort }}
  {{- end }}
  {{- end }}

  selector:
    {{- include "arbitragex-supreme.selectorLabels" . | nindent 4 }}

  # Session affinity for WebSocket connections
  sessionAffinity: {{ .Values.service.sessionAffinity | default "None" }}
  {{- if eq .Values.service.sessionAffinity "ClientIP" }}
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: {{ .Values.service.sessionAffinityTimeout | default 10800 }}
  {{- end }}

---
# Headless service for StatefulSet components
{{- if and .Values.statefulset .Values.statefulset.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "arbitragex-supreme.fullname" . }}-headless
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "arbitragex-supreme.labels" . | nindent 4 }}
    component: headless
spec:
  clusterIP: None
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.service.grpcPort }}
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    {{- include "arbitragex-supreme.selectorLabels" . | nindent 4 }}
  publishNotReadyAddresses: true
{{- end }}

---
# Internal service for cluster communication
apiVersion: v1
kind: Service
metadata:
  name: {{ include "arbitragex-supreme.fullname" . }}-internal
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "arbitragex-supreme.labels" . | nindent 4 }}
    component: internal
  annotations:
    # Internal traffic only
    service.kubernetes.io/internal-traffic-policy: Local
spec:
  type: ClusterIP
  ports:
    # Health check port for internal probes
    - port: {{ .Values.service.healthPort }}
      targetPort: health
      protocol: TCP
      name: health
    
    # Metrics port for Prometheus scraping
    - port: {{ .Values.service.metricsPort }}
      targetPort: metrics
      protocol: TCP
      name: metrics
    
    # gRPC port for service mesh
    - port: {{ .Values.service.grpcPort }}
      targetPort: grpc
      protocol: TCP
      name: grpc

  selector:
    {{- include "arbitragex-supreme.selectorLabels" . | nindent 4 }}

---
# External service for blockchain RPC endpoints (if enabled)
{{- if and .Values.blockchain .Values.blockchain.externalRpc .Values.blockchain.externalRpc.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "arbitragex-supreme.fullname" . }}-rpc
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "arbitragex-supreme.labels" . | nindent 4 }}
    component: rpc
  annotations:
    # External traffic annotations
    service.kubernetes.io/external-traffic-policy: Local
spec:
  type: {{ .Values.blockchain.externalRpc.serviceType | default "ClusterIP" }}
  ports:
    # Ethereum mainnet RPC
    - port: 8545
      targetPort: eth-rpc
      protocol: TCP
      name: eth-rpc
    
    # Polygon RPC
    - port: 8546
      targetPort: polygon-rpc
      protocol: TCP
      name: polygon-rpc
    
    # Arbitrum RPC
    - port: 8547
      targetPort: arbitrum-rpc
      protocol: TCP
      name: arbitrum-rpc
    
    # Optimism RPC
    - port: 8548
      targetPort: optimism-rpc
      protocol: TCP
      name: optimism-rpc
    
    # Base RPC
    - port: 8549
      targetPort: base-rpc
      protocol: TCP
      name: base-rpc

  selector:
    {{- include "arbitragex-supreme.selectorLabels" . | nindent 4 }}
{{- end }}