# ArbitrageX Supreme - HashiCorp Vault Docker Compose
# Ingenio Pichichi S.A. - Vault containerizado para desarrollo y staging
# TODO FUNCIONAL - Vault en contenedor para entornos controlados

version: '3.8'

services:
  vault:
    image: hashicorp/vault:1.15.2
    container_name: arbitragex-vault
    restart: unless-stopped
    
    # Configuración de puertos
    ports:
      - "8200:8200"  # API de Vault
      - "8201:8201"  # Cluster interno
    
    # Variables de entorno
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8200'
      VAULT_API_ADDR: 'http://0.0.0.0:8200'
      VAULT_ADDRESS: 'http://0.0.0.0:8200'
      VAULT_UI: 'true'
      VAULT_LOG_LEVEL: 'info'
      VAULT_DEV_ROOT_TOKEN_ID: 'arbitragex-vault-token'
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
    
    # Comando de inicio (modo desarrollo)
    # Para producción, usar: vault server -config=/vault/config/vault.hcl
    command: >
      vault server -dev 
      -dev-root-token-id=arbitragex-vault-token
      -dev-listen-address=0.0.0.0:8200
    
    # Montajes de volúmenes
    volumes:
      - ./config/vault:/vault/config:ro
      - vault-data:/vault/data
      - vault-logs:/vault/logs
    
    # Configuración de red
    networks:
      - arbitragex-network
    
    # Health check
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    
    # Configuración de seguridad
    cap_add:
      - IPC_LOCK
    
    # Labels para organización
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault.rule=Host(`vault.arbitragex.local`)"
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.services.vault.loadbalancer.server.port=8200"

  # Vault UI Proxy (opcional, para desarrollo)
  vault-ui:
    image: nginx:alpine
    container_name: arbitragex-vault-ui
    restart: unless-stopped
    
    ports:
      - "8080:80"
    
    volumes:
      - ./config/nginx/vault-ui.conf:/etc/nginx/conf.d/default.conf:ro
    
    depends_on:
      - vault
    
    networks:
      - arbitragex-network
    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vault-ui.rule=Host(`vault-ui.arbitragex.local`)"

# Volúmenes persistentes
volumes:
  vault-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/vault
  
  vault-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/vault

# Red personalizada
networks:
  arbitragex-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16