# ===================================================================
# ARBITRAGEX SUPREME - CONFIGURACIÃ“N NGINX PARA CDN
# Actividades 36-40: Nginx Configuration for Global Distribution
# Ingenio Pichichi S.A. - Hector Fabio Riascos C.
# ===================================================================

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=arbitrage:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=1000r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=perip:10m;
limit_conn_zone $server_name zone=perserver:10m;

# Geo IP blocking
geo $blocked_country {
    default 0;
    CN 1;  # Block China
    RU 1;  # Block Russia
    KP 1;  # Block North Korea
}

# Map para cache bypass
map $http_cache_control $bypass_cache {
    "~*no-cache" 1;
    "~*no-store" 1;
    default 0;
}

# Upstream servers
upstream arbitragex_backend {
    least_conn;
    
    server arbitragex-app-1.internal:3000 weight=3 max_fails=3 fail_timeout=30s;
    server arbitragex-app-2.internal:3000 weight=3 max_fails=3 fail_timeout=30s;
    server arbitragex-app-3.internal:3000 weight=2 max_fails=3 fail_timeout=30s;
    
    keepalive 32;
}

upstream arbitragex_api {
    least_conn;
    
    server arbitragex-api-1.internal:8000 weight=3 max_fails=3 fail_timeout=30s;
    server arbitragex-api-2.internal:8000 weight=3 max_fails=3 fail_timeout=30s;
    server arbitragex-api-3.internal:8000 weight=2 max_fails=3 fail_timeout=30s;
    
    keepalive 64;
}

# Cache paths
proxy_cache_path /var/cache/nginx/arbitragex 
    levels=2:2 
    keys_zone=arbitragex_cache:100m 
    inactive=7d 
    max_size=10g 
    use_temp_path=off;

proxy_cache_path /var/cache/nginx/api 
    levels=1:2 
    keys_zone=api_cache:50m 
    inactive=1h 
    max_size=1g 
    use_temp_path=off;

# ============================================================================
# MAIN SERVER BLOCK - HTTPS
# ============================================================================

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name arbitragexsupreme.com www.arbitragexsupreme.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/arbitragexsupreme.com.crt;
    ssl_certificate_key /etc/nginx/ssl/arbitragexsupreme.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # HSTS Header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # CSP Header for security
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdn.jsdelivr.net unpkg.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com cdn.jsdelivr.net; font-src 'self' fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:; worker-src 'self' blob:;" always;
    
    # Rate limiting
    limit_req zone=general burst=50 nodelay;
    limit_conn perip 50;
    limit_conn perserver 1000;
    
    # Geo blocking
    if ($blocked_country) {
        return 403 "Access denied from your country";
    }
    
    # Root directory
    root /var/www/arbitragexsupreme;
    index index.html index.htm;
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # ========================================================================
    # STATIC ASSETS - AGGRESSIVE CACHING
    # ========================================================================
    
    # Immutable assets (versioned files)
    location ~* ^/assets/.+\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_types text/css application/javascript image/svg+xml;
        
        # Security (disable for static assets)
        add_header X-Frame-Options "" always;
        add_header X-Content-Type-Options "" always;
        
        # CORS for fonts
        if ($request_filename ~* \.(woff|woff2|ttf|eot)$) {
            add_header Access-Control-Allow-Origin "*";
        }
        
        try_files $uri =404;
    }
    
    # Images with optimization
    location ~* \.(png|jpg|jpeg|gif|webp|avif|svg|ico)$ {
        expires 30d;
        add_header Cache-Control "public";
        add_header Vary "Accept";
        
        # Try WebP first if browser supports it
        location ~* \.(png|jpg|jpeg)$ {
            add_header Vary "Accept";
            try_files $uri$webp_suffix $uri =404;
        }
        
        try_files $uri =404;
    }
    
    # CSS and JS files
    location ~* \.(css|js)$ {
        expires 1d;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
        
        gzip on;
        gzip_vary on;
        gzip_comp_level 6;
        
        try_files $uri =404;
    }
    
    # Fonts
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        expires 1M;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        
        try_files $uri =404;
    }
    
    # ========================================================================
    # API ROUTES
    # ========================================================================
    
    # API endpoints with caching
    location /api/ {
        # Rate limiting for API
        limit_req zone=api burst=20 nodelay;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Cache configuration
        proxy_cache api_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri$http_authorization";
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $bypass_cache;
        proxy_no_cache $bypass_cache;
        
        # Add cache status header
        add_header X-Cache-Status $upstream_cache_status always;
        
        # Proxy settings
        proxy_pass http://arbitragex_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Arbitrage execution endpoints - stricter rate limiting
    location /api/arbitrage/execute {
        limit_req zone=arbitrage burst=5 nodelay;
        
        # No caching for execution endpoints
        proxy_cache off;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        
        # CORS
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        proxy_pass http://arbitragex_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeout for arbitrage execution
        proxy_connect_timeout 10s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
    
    # ========================================================================
    # WEBSOCKET CONNECTIONS
    # ========================================================================
    
    location /ws {
        proxy_pass http://arbitragex_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }
    
    # ========================================================================
    # APPLICATION ROUTES
    # ========================================================================
    
    # Application with caching
    location / {
        # Try static file first, then proxy to app
        try_files $uri $uri/ @app;
        
        # Cache static HTML
        expires 1h;
        add_header Cache-Control "public";
        add_header Vary "Accept-Encoding";
    }
    
    # Proxy to application
    location @app {
        proxy_cache arbitragex_cache;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 5m;
        
        add_header X-Cache-Status $upstream_cache_status always;
        
        proxy_pass http://arbitragex_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # ========================================================================
    # HEALTH CHECKS
    # ========================================================================
    
    location /health {
        access_log off;
        add_header Content-Type "application/json" always;
        return 200 '{"status":"healthy","service":"arbitragex-cdn","timestamp":"$time_iso8601"}';
    }
    
    location /nginx-health {
        access_log off;
        stub_status on;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
    }
    
    # ========================================================================
    # SECURITY & MAINTENANCE
    # ========================================================================
    
    # Block common attack patterns
    location ~* \.(env|git|svn|htaccess|htpasswd)$ {
        deny all;
    }
    
    # Block PHP execution
    location ~* \.php$ {
        deny all;
    }
    
    # Maintenance page
    location /maintenance {
        alias /var/www/maintenance;
        try_files /index.html =503;
    }
    
    # robots.txt
    location = /robots.txt {
        alias /var/www/arbitragexsupreme/robots.txt;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # sitemap.xml
    location = /sitemap.xml {
        alias /var/www/arbitragexsupreme/sitemap.xml;
        expires 1d;
        add_header Cache-Control "public";
    }
}

# ============================================================================
# HTTP TO HTTPS REDIRECT
# ============================================================================

server {
    listen 80;
    listen [::]:80;
    
    server_name arbitragexsupreme.com www.arbitragexsupreme.com;
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# ============================================================================
# CDN SUBDOMAIN
# ============================================================================

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name cdn.arbitragexsupreme.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/arbitragexsupreme.com.crt;
    ssl_certificate_key /etc/nginx/ssl/arbitragexsupreme.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Security headers for CDN
    add_header Access-Control-Allow-Origin "*" always;
    add_header Cache-Control "public, max-age=31536000, immutable" always;
    
    # Root for CDN assets
    root /var/www/cdn;
    
    # Aggressive caching for CDN content
    location / {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_comp_level 9;
        gzip_types text/css application/javascript image/svg+xml;
        
        try_files $uri =404;
    }
}

# ============================================================================
# API SUBDOMAIN
# ============================================================================

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name api.arbitragexsupreme.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/arbitragexsupreme.com.crt;
    ssl_certificate_key /etc/nginx/ssl/arbitragexsupreme.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    
    # Rate limiting for API subdomain
    limit_req zone=api burst=30 nodelay;
    
    # CORS for API
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
    
    # All requests go to API backend
    location / {
        proxy_pass http://arbitragex_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API-specific caching
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_bypass $bypass_cache;
        
        add_header X-Cache-Status $upstream_cache_status always;
    }
}

# ============================================================================
# WEBSOCKET SUBDOMAIN
# ============================================================================

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name ws.arbitragexsupreme.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/arbitragexsupreme.com.crt;
    ssl_certificate_key /etc/nginx/ssl/arbitragexsupreme.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # WebSocket configuration
    location / {
        proxy_pass http://arbitragex_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }
}